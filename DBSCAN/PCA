'''
Created on 13 Jan 2018

@author: Ghadah
'''
from sklearn.decomposition import PCA as sklearnPCA
from matplotlib import pyplot as plt
from BitVector import getBitVector
import numpy as np

features = []
# get extracted features from Bitvector class
data = getBitVector()
for key in data:
    element = data.get(key)
    features.append(element)
# represent data as a matrix
mat = np.matrix(features)

# code available from ....
sklearn_pca = sklearnPCA(n_components=2)
Y_sklearn = sklearn_pca.fit_transform(mat)


with plt.style.context('seaborn-whitegrid'):
    plt.figure(figsize=(6, 4))
    for lab, col in zip(('ADRD_genome', 'ANVERSEBOOT_genome'),
                        ('blue', 'red')):
        plt.scatter(Y_sklearn[y == lab, 0],
                    Y_sklearn[y == lab, 1],
                    label=lab,
                    c=col)
    plt.xlabel('Principal Component 1')
    plt.ylabel('Principal Component 2')
    plt.legend(loc='lower center')
    plt.tight_layout()
    plt.show()
